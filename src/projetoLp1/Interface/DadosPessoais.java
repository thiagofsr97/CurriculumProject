
package projetoLp1.Interface;

import java.awt.Color;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import projetoLp1.Interface.Model.ClasseDados;
import javax.swing.JOptionPane;
import projetoLp1.Interface.Model.Utils;


public class DadosPessoais extends javax.swing.JInternalFrame {

    /**
     * Creates new form DadosPessoais
     */
    public static void branco(){
        txtEmail.setBackground(Color.white);
        txtCPF.setBackground(Color.white);
        txtTelefone.setBackground(Color.white);
        txtRegProfissional.setBackground(Color.white);
        txtEndereco.setBackground(Color.white);
        txtNome.setBackground(Color.white);
    }
    
    public DadosPessoais() {
        initComponents();
        addInternalFrameListener(new InternalFrameAdapter(){
            @Override
            public void internalFrameClosing(InternalFrameEvent e) {
                // do something  
                TelaPrincipal.gerenciaTela(6);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRegProfissional = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnAvancar = new javax.swing.JButton();
        boxDDD = new javax.swing.JComboBox<>();
        boxEmail = new javax.swing.JComboBox<>();
        txtCPF = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();

        setClosable(true);

        jLabel1.setText("Nome:");

        txtNome.setToolTipText("");

        jLabel2.setText("Endereço:");

        jLabel3.setText("Telefone:");

        jLabel4.setText("CPF:");

        jLabel5.setText("R.P:");

        jLabel6.setText("Email:");

        btnAvancar.setText("Avançar");
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });

        boxDDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "69", "71", "73", "74", "75", "76", "77", "79", "81", "82", "83", "84", "85", "86", "87", "88", "89" }));
        boxDDD.setSelectedIndex(10);

        boxEmail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "@hotmail.com", "@outlook.com", "@yahoo.com", "@yahoo.com.br", "@gmail.com", "@live.com", "@msn.com", "Outro (Digite ao lado)" }));

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(#)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boxDDD, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAvancar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(boxEmail, 0, 159, Short.MAX_VALUE))
                            .addComponent(txtEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRegProfissional, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCPF, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(boxDDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRegProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnAvancar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        branco();
        // VERIFICAR SE TODOS OS CAMPOS TEM INFORMAÇÕES CERTAS
        boolean checked = true; // Verifica se os dados foram preenchidos corretamente
        
        //Verificando email, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtEmail)){
            
            email = txtEmail.getText();
            
            if(boxEmail.getSelectedItem().toString().equals("Outro (Digite ao lado)") == false){ //Caso alguma opção seja selecionada
                for(int i = 0; i< txtEmail.getText().length(); i++){ //Percorre a string procurando "@"
                    if(email.charAt(i) == '@'){ // Se encontrar, pega String até o @
                        email = email.substring(0,i);
                        break;
                    }
                }
                email += boxEmail.getSelectedItem().toString(); // Após pegar Substring, adiciona o tipo de email das opções
            }else{
                boolean achou = false; // Se a opção for "Outro"
                for(int i = 0; i< txtEmail.getText().length(); i++){ // Percorre a string procurando "@"
                    if(email.charAt(i) == '@' && i > 0){ // Se encontrar, o email é válido
                        achou = true;
                        break;
                    }
                }
                if(achou == false){
                    txtEmail.setBackground(new java.awt.Color(255, 51, 51));
                    checked = false;
                    // Se não encontrar, Email inválido!
                }
                    
            }

        }else{
            txtEmail.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }
        
        //Verificando cpf, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtCPF)){
            if(txtCPF.getText().equals("   .   .   -  ")){
                txtCPF.setBackground(new java.awt.Color(255, 51, 51));
                checked = false;
            }
        }else{
            txtCPF.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }
        
        //Verificando Endereço, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtEndereco)){
        }else{
            txtEndereco.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }
        
        //Verificando Nome, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtNome)){
        }else{
            txtNome.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }
        
        //Verificando RegProfissional, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtRegProfissional)){
        }else{
            txtRegProfissional.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }
        
        //Verificando Telefone, caso ok, atribui o valor.
        if(!Utils.isEmptyOrNUll(txtTelefone)){    
        }else{
            txtTelefone.setBackground(new java.awt.Color(255, 51, 51));
            checked = false;
        }  
             
        if(checked){
          dados = new ClasseDados(txtNome.getText(), txtEndereco.getText(), email,
                                  txtCPF.getText(), txtRegProfissional.getText(),
                                   "0" + boxDDD.getSelectedItem().toString() + " " +
                                    txtTelefone.getText());
          TelaPrincipal.recebeDados(dados);
          TelaPrincipal.gerenciaTela(2);
        }else{
            Utils.verifyField(this);
        }      
        
    }//GEN-LAST:event_btnAvancarActionPerformed

    
    private ClasseDados dados;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxDDD;
    private javax.swing.JComboBox<String> boxEmail;
    private javax.swing.JButton btnAvancar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private static javax.swing.JFormattedTextField txtCPF;
    private static javax.swing.JTextField txtEmail;
    private static javax.swing.JTextField txtEndereco;
    private static javax.swing.JTextField txtNome;
    private static javax.swing.JTextField txtRegProfissional;
    private static javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
    private String email;
    private int cont = 0;
}
